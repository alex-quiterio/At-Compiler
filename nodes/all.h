//
// **** AUTOMATICALLY GENERATED BY mknodedecls.pl -- DO NOT EDIT ****
//
#ifdef __NODE_DECLARATIONS_ONLY__

//---------------------------------------------------------------------------
//     THESE ARE PREDEFINED NODES, AVAILABLE FROM THE CDK
//---------------------------------------------------------------------------

namespace cdk {
  namespace node {
    class Node;  class Nil;  class Data;  class Composite;  class Sequence;
    namespace expression {
      template <class T> class Simple;
      class Double;  class Integer;  class String;  class Identifier;
      class UnaryExpression;
      class NEG;
      class BinaryExpression;
      class ADD;  class SUB;  class MUL;  class DIV;  class MOD;
      class LT;   class LE;   class GE;   class GT;   class EQ;   class NE;
    }
  } // namespace node
} // namespace cdk

//---------------------------------------------------------------------------
//     THESE ARE THE NODES DEFINED SPECIFICALLY FOR THIS APPLICATION
//---------------------------------------------------------------------------

namespace at {
namespace node { class IfElseNode; } 
namespace node { class FunctionDeclNode; } 
namespace node { class PrintNode; } 
namespace node { class DeclarationNode; } 
namespace node { class TrashNode; } 
namespace node { class ForNode; } 
namespace node { class NextNode; } 
namespace node { class StopNode; } 
namespace node { class IfNode; } 
namespace node { class InclusiveNode; } 
namespace node { class ReturnNode; } 
namespace node { class FileNode; } 
namespace node { class FunctionNode; } 
namespace node { class SectionNode; } 
namespace node { class InputArgumentNode; } 
namespace node { class BodyNode; } 
namespace node { namespace expression { class Position; } } 
namespace node { namespace expression { class POWER; } } 
namespace node { namespace expression { class QuestionMark; } } 
namespace node { namespace expression { class ALLOC; } } 
namespace node { namespace expression { class OR; } } 
namespace node { namespace expression { class NOT; } } 
namespace node { namespace expression { class NestedVar; } } 
namespace node { namespace expression { class AND; } } 
namespace node { namespace expression { class LeftValue; } } 
namespace node { namespace expression { class AccessPointer; } } 
namespace node { namespace expression { class AtribNode; } } 
namespace node { namespace expression { class CallFunction; } } 
namespace node { namespace expression { class ReadNode; } } 
} // namespace at

//---------------------------------------------------------------------------
//     A L I A S E S
//---------------------------------------------------------------------------

// make sure the "semantics" namespace is known
namespace at { namespace semantics {} }

#else /* !defined(__NODE_DECLARATIONS_ONLY__) */

#ifndef __AUTOMATIC_NODE_ALLNODES_H__
#define __AUTOMATIC_NODE_ALLNODES_H__

//---------------------------------------------------------------------------
//     THESE ARE PREDEFINED NODES, AVAILABLE FROM THE CDK
//---------------------------------------------------------------------------

#include <cdk/nodes/Node.h>
#include <cdk/nodes/Data.h>
#include <cdk/nodes/Nil.h>
#include <cdk/nodes/Composite.h>
#include <cdk/nodes/Sequence.h>

#include <cdk/nodes/expressions/Integer.h>
#include <cdk/nodes/expressions/Double.h>
#include <cdk/nodes/expressions/String.h>
#include <cdk/nodes/expressions/Identifier.h>
#include <cdk/nodes/expressions/NEG.h>
#include <cdk/nodes/expressions/ADD.h>
#include <cdk/nodes/expressions/SUB.h>
#include <cdk/nodes/expressions/MUL.h>
#include <cdk/nodes/expressions/DIV.h>
#include <cdk/nodes/expressions/MOD.h>
#include <cdk/nodes/expressions/LT.h>
#include <cdk/nodes/expressions/GT.h>
#include <cdk/nodes/expressions/GE.h>
#include <cdk/nodes/expressions/LE.h>
#include <cdk/nodes/expressions/NE.h>
#include <cdk/nodes/expressions/EQ.h>

//---------------------------------------------------------------------------
//     THESE ARE THE NODES DEFINED SPECIFICALLY FOR THIS APPLICATION
//---------------------------------------------------------------------------

#include "nodes/IfElseNode.h"
#include "nodes/FunctionDeclNode.h"
#include "nodes/PrintNode.h"
#include "nodes/DeclarationNode.h"
#include "nodes/TrashNode.h"
#include "nodes/ForNode.h"
#include "nodes/NextNode.h"
#include "nodes/StopNode.h"
#include "nodes/IfNode.h"
#include "nodes/InclusiveNode.h"
#include "nodes/ReturnNode.h"
#include "nodes/FileNode.h"
#include "nodes/FunctionNode.h"
#include "nodes/SectionNode.h"
#include "nodes/InputArgumentNode.h"
#include "nodes/BodyNode.h"
#include "nodes/expression/Position.h"
#include "nodes/expression/POWER.h"
#include "nodes/expression/QuestionMark.h"
#include "nodes/expression/ALLOC.h"
#include "nodes/expression/OR.h"
#include "nodes/expression/NOT.h"
#include "nodes/expression/NestedVar.h"
#include "nodes/expression/AND.h"
#include "nodes/expression/LeftValue.h"
#include "nodes/expression/AccessPointer.h"
#include "nodes/expression/AtribNode.h"
#include "nodes/expression/CallFunction.h"
#include "nodes/expression/ReadNode.h"


//---------------------------------------------------------------------------
//     A L I A S E S
//---------------------------------------------------------------------------

// make sure the "semantics" namespace is known
namespace at { namespace semantics {} }

//---------------------------------------------------------------------------
//     T H E    E N D
//---------------------------------------------------------------------------

#endif /* !defined(__AUTOMATIC_NODE_ALLNODES_H__) */

#endif /* !defined(__NODE_DECLARATIONS_ONLY__) */
